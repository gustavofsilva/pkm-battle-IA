# General OS-specific files
.DS_Store
Thumbs.db

# IDE specific files
.vscode/

# General Log files (less specific, consider if needed if subdirs cover it)
# logs/
# *.log

# Dependency Directories
# These should be specific to their subprojects to avoid issues if other top-level dirs use them.
# node_modules/ # Replaced by specific subdir ignores

# Environment variables file (less specific)
# .env # Replaced by specific subdir ignores

# Temporary build/dist folders (less specific)
# dist/
# build/

# === Backend: pokemon-battle-backend/ ===
pokemon-battle-backend/node_modules/
pokemon-battle-backend/npm-debug.log*
pokemon-battle-backend/yarn-debug.log*
pokemon-battle-backend/yarn-error.log*
pokemon-battle-backend/.env*
pokemon-battle-backend/*.log
pokemon-battle-backend/coverage/
pokemon-battle-backend/.nyc_output/
# Any other backend specific like .pid, .seed etc. can be added here if needed

# === Frontend: pokemon-battle/ ===
pokemon-battle/node_modules/
pokemon-battle/dist/
pokemon-battle/.vite/
pokemon-battle/coverage/
pokemon-battle/.env*
pokemon-battle/*.log
# `build/` might be too generic for frontend if other tools use it.
# `pokemon-battle/build/` could be used if specific to it.

# === Other standard ignores from previous .gitignore that are still relevant ===

# Logs (from original, keeping if they are meant for root or other top-level tools)
logs # If there are root-level logs
*.log # If there are root-level logs (duplicates backend/frontend but harmless)

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul (general)
coverage # Duplicates subdir coverage but fine
*.lcov

# nyc test coverage (general)
.nyc_output # Duplicates subdir .nyc_output but fine

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release # This is usually specific to C++ addons, keep at root if such can exist

# jspm_packages (less common now but was in a generic list)
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache files
.parcel-cache # .cache is too generic, let subdirs handle if they create .cache

# Next.js build output
.next/
out/

# Nuxt.js build output
.nuxt/
# dist/ # Already handled by pokemon-battle/dist

# Svelte build output
.svelte-kit/
# build/ # Already handled by pokemon-battle/build if it exists, or general build/Release

# Remix build output
# .cache/ # Too generic
# build/  # Too generic
public/build/

# Docusaurus build output
.docusaurus/

# Gatsby files
# .cache/ # Too generic
# public # Commented out as per original template

# vuepress build output
.vuepress/dist/

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
dynamodb_local_latest/

# Removed from original root .gitignore as it should usually be versioned:
# package-lock.json
# (If sub-projects have their own package-lock.json, they should be versioned too)
# (The specific `pokemon-battle-backend/node_modules/` and `pokemon-battle/node_modules/` will ignore any lock files *inside* node_modules, which is not standard)
# It's better to not ignore lock files at all, or if a specific project intentionally doesn't want it, it should be in *its* specific section.
# For now, no explicit ignore for package-lock.json in subdirs.
# If `package-lock.json` for `pokemon-battle` or `pokemon-battle-backend` should be ignored, it would be:
# pokemon-battle/package-lock.json
# pokemon-battle-backend/package-lock.json
# But this is generally not recommended.
